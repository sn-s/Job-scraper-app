{"version":3,"sources":["Card/CardItem.js","Card/Card.js","Switch/Switch.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","transition","boxShadow","transform","elevation8","cardheader","fontSize","color","fontWeight","CardItem","shadow","data","colour","classes","map","item","index","style","textDecoration","href","link","target","rel","className","margin","raised","CardHeader","title","subheader","company","background","CardContent","textAlign","Typography","variant","component","location","CardActions","disableSpacing","salary","type","date","split","Card","name","bgColour","push","Grow","in","transformOrigin","timeout","length","Switch","value","id","defaultChecked","htmlFor","spacing","width","borderColor","line","marginTop","marginLeft","marginRight","ColorLinearProgress","withStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","App","useState","setData","loading","setLoading","text","setText","job","city","input","setInput","onChangeHandler","e","preventDefault","val","prevState","onSubmitHandler","a","reset","document","getElementById","blur","sort","querySelector","settings","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","scrollIntoView","behavior","console","log","cardSites","Object","keys","items","displayCard","textColour","searchText","onClick","window","reload","onSubmit","noValidate","autoComplete","TextField","label","onChange","Button","ReactDOM","render"],"mappings":"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","file":"static/js/main.9b235226.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./CardItem.css\"\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 350,\r\n    transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n    '&:hover': {\r\n      boxShadow: '0 4px 20px 0 rgba(0,0,0,0.12)',\r\n      transform: 'scale(1.04)',\r\n    },\r\n  },\r\n  elevation8: {\r\n    \"& .MuiPaper-elevation8\": {\r\n      boxShadow: \"0px 5px 5px -3px #0000ff, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n    }\r\n  },\r\n  cardheader: {\r\n    \"& .MuiCardHeader-title\": {\r\n      fontSize: \"1.4rem\"\r\n    },\r\n    \"& .MuiCardHeader-subheader\": {\r\n      color: \"#8842d5\",\r\n      fontWeight: \"bold\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst CardItem = ({ data, colour }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  let shadow;\r\n  if(colour === \"blue\") shadow = \"0px 10px 5px -3px #0000ff, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n  if(colour === \"green\") shadow = \"0px 10px 5px -3px #00cd00, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n  if(colour === \"purple\") shadow = \"0px 10px 5px -3px #cd00cd, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n\r\n  return ( \r\n    <div>\r\n      {data.map((item, index) => (\r\n        <a style={{textDecoration: \"none\"}} key={index} href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <Card className={`${classes.root} ${classes.elevation8}`} style={{margin: \"20px\", boxShadow: shadow}} raised >\r\n            <CardHeader className={classes.cardheader} title={item.title} subheader={item.company} style={{background: \"rgba(0,0,0,.1)\"}} />\r\n            <CardContent style={{textAlign: \"center\"}} >\r\n              <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                <LocationCityIcon style={{color: \"#8842d5\"}} /> {item.location}\r\n              </Typography>\r\n              <CardActions disableSpacing />\r\n              {item.salary && <>\r\n                <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                  <MonetizationOnIcon style={{color: \"#8842d5\"}} /> {item.salary}\r\n                </Typography>\r\n                <CardActions disableSpacing />\r\n              </>}\r\n              {item.type && <>\r\n                <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                  <WorkIcon style={{color: \"#8842d5\"}} /> {item.type}\r\n                </Typography>\r\n                <CardActions disableSpacing />\r\n              </>}\r\n              <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                {item.date && <TodayIcon style={{color: \"#8842d5\"}} />} {item.date && item.date.split(\"by\")[0]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </a>\r\n      ))}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default CardItem;","import React from \"react\";\r\nimport CardItem from \"./CardItem\";\r\nimport \"./Card.css\";\r\n\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst Card = ({ name, data }) => {\r\n  const bgColour = [];\r\n  if (name === \"Indeed\") bgColour.push(\"#0000ff\", \"blue\");\r\n  if (name === \"CV Library\") bgColour.push(\"#00cd00\", \"green\");\r\n  if (name === \"Reed\") bgColour.push(\"#cd00cd\", \"purple\");\r\n\r\n  return (\r\n    <Grow in style={{ transformOrigin: \"0 0 0\" }} {...{ timeout: 1000 }}>\r\n      <div className=\"card\">\r\n        <h1 className=\"title-style\" style={{ color: bgColour[0] }}>\r\n          {name}\r\n        </h1>\r\n        {!data.length ? (\r\n          <h2 style={{ color: \"#8842d5\" }}>Unable to find results</h2>\r\n        ) : (\r\n          <CardItem data={data} colour={bgColour[1]} />\r\n        )}\r\n      </div>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport \"./Switch.css\";\r\n\r\nconst Switch = () => {\r\n  return (\r\n    <div className=\"switch\">\r\n      <input type=\"radio\" className=\"switch-input\" name=\"sort\" value=\"relevance\" id=\"relevance\" defaultChecked />\r\n      <label htmlFor=\"relevance\" className=\"switch-label switch-label-off\">Relevance</label>\r\n      <input type=\"radio\" className=\"switch-input\" name=\"sort\" value=\"date\" id=\"date\" />\r\n      <label htmlFor=\"date\" className=\"switch-label switch-label-on\">Date</label>\r\n      <span className=\"switch-selection\"></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Switch;","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Card from \"./Card/Card\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"./Switch/Switch\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: \"#8842d5\",\r\n    },\r\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: \"#8842d5\",\r\n    },\r\n  },\r\n  line: {\r\n    marginTop: 35,\r\n    width: \"70%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n}));\r\n\r\nconst ColorLinearProgress = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: \"#8842d5\",\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n})(LinearProgress);\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [text, setText] = useState(false);\r\n  const [input, setInput] = useState({\r\n    job: \"\",\r\n    city: \"\",\r\n  });\r\n\r\n  const onChangeHandler = (e) => {\r\n    e.preventDefault();\r\n    let name = e.target.name;\r\n    let val = e.target.value;\r\n    setInput((prevState) => ({\r\n      ...prevState,\r\n      [name]: val,\r\n    }));\r\n  };\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    document.getElementById(\"whatBox\").blur();\r\n    document.getElementById(\"whereBox\").blur();\r\n    setText({ job: input.job, city: input.city });\r\n    setLoading(true);\r\n    const sort = document.querySelector('input[name=\"sort\"]:checked').value;\r\n    const settings = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ job: input.job, city: input.city, sort: sort }),\r\n    };\r\n    try {\r\n      const response = await fetch(\"/search\", settings);\r\n      if (!response.ok) throw await response.json();\r\n      const data = await response.json();\r\n      data && setLoading(false);\r\n      setData(data);\r\n      document.getElementById(\"cardId\").scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const cardSites = data && Object.keys(data[0].items);\r\n  const displayCard =\r\n    cardSites &&\r\n    cardSites.map((item, index) => (\r\n      <Card key={index} name={item} data={data[0].items[item]} />\r\n    ));\r\n\r\n  const classes = useStyles();\r\n\r\n  const btnStyle = { background: \"#8842d5\", color: \"white\", marginTop: \"20px\" };\r\n  const textColour = { color: \"#8842d5\" };\r\n  const searchText = (\r\n    <h3 style={{ marginTop: \"25px\" }}>\r\n      Showing results for \"<span style={textColour}>{text.job}</span>\" jobs in \"\r\n      <span style={textColour}>{text.city}</span>\"\r\n    </h3>\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"header\" onClick={() => window.location.reload()}>\r\n        Jobs-4-U\r\n      </h1>\r\n      <form\r\n        className={classes.root}\r\n        onSubmit={onSubmitHandler}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          id=\"whatBox\"\r\n          name=\"job\"\r\n          label=\"What\"\r\n          variant=\"outlined\"\r\n          onChange={onChangeHandler}\r\n        />\r\n        <TextField\r\n          id=\"whereBox\"\r\n          name=\"city\"\r\n          label=\"Where\"\r\n          variant=\"outlined\"\r\n          onChange={onChangeHandler}\r\n        />\r\n        <Button\r\n          className=\"btn-style\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          style={btnStyle}\r\n        >\r\n          Search\r\n        </Button>\r\n      </form>\r\n      <Switch />\r\n      {loading && <ColorLinearProgress className={classes.line} />}\r\n      {text && searchText}\r\n      <div id=\"cardId\">{displayCard}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}