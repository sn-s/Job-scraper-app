{"version":3,"sources":["Card/CardItem.js","Card/Card.js","Switch/Switch.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","transition","boxShadow","transform","elevation8","cardheader","fontSize","color","fontWeight","CardItem","shadow","data","colour","classes","map","item","index","style","textDecoration","key","href","link","target","rel","className","margin","raised","CardHeader","title","subheader","company","background","CardContent","textAlign","Typography","variant","component","location","CardActions","disableSpacing","salary","type","date","split","Card","name","bgColour","push","Grow","in","transformOrigin","timeout","noData","Switch","value","id","defaultChecked","htmlFor","spacing","width","borderColor","line","marginTop","marginLeft","marginRight","ColorLinearProgress","withStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","App","useState","setData","loading","setLoading","text","setText","job","city","input","setInput","onChangeHandler","e","preventDefault","val","prevState","onSubmitHandler","a","reset","document","getElementById","blur","sort","querySelector","settings","method","headers","Accept","body","JSON","stringify","fetch","response","ok","json","scrollIntoView","behavior","console","log","cardSites","Object","keys","items","displayCard","textColour","searchText","onClick","window","reload","onSubmit","noValidate","autoComplete","TextField","label","onChange","Button","ReactDOM","render"],"mappings":"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","file":"static/js/main.30876699.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./CardItem.css\"\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 350,\r\n    transition: '0.3s cubic-bezier(.47,1.64,.41,.8)',\r\n    '&:hover': {\r\n      boxShadow: '0 4px 20px 0 rgba(0,0,0,0.12)',\r\n      transform: 'scale(1.04)',\r\n    },\r\n  },\r\n  elevation8: {\r\n    \"& .MuiPaper-elevation8\": {\r\n      boxShadow: \"0px 5px 5px -3px #0000ff, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n    }\r\n  },\r\n  cardheader: {\r\n    \"& .MuiCardHeader-title\": {\r\n      fontSize: \"1.4rem\"\r\n    },\r\n    \"& .MuiCardHeader-subheader\": {\r\n      color: \"#8842d5\",\r\n      fontWeight: \"bold\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst CardItem = ({ data, colour }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  let shadow;\r\n  if(colour === \"blue\") shadow = \"0px 10px 5px -3px #0000ff, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n  if(colour === \"green\") shadow = \"0px 10px 5px -3px #00cd00, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n  if(colour === \"purple\") shadow = \"0px 10px 5px -3px #cd00cd, 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\r\n\r\n  return ( \r\n    <div>\r\n      {data.map((item, index) => (\r\n        <a style={{textDecoration: \"none\"}} key={index} href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <Card className={`${classes.root} ${classes.elevation8}`} style={{margin: \"20px\", boxShadow: shadow}} raised >\r\n            <CardHeader className={classes.cardheader} title={item.title} subheader={item.company} style={{background: \"rgba(0,0,0,.1)\"}} />\r\n            <CardContent style={{textAlign: \"center\"}} >\r\n              <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                <LocationCityIcon style={{color: \"#8842d5\"}} /> {item.location}\r\n              </Typography>\r\n              <CardActions disableSpacing />\r\n              {item.salary && <>\r\n                <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                  <MonetizationOnIcon style={{color: \"#8842d5\"}} /> {item.salary}\r\n                </Typography>\r\n                <CardActions disableSpacing />\r\n              </>}\r\n              {item.type && <>\r\n                <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                  <WorkIcon style={{color: \"#8842d5\"}} /> {item.type}\r\n                </Typography>\r\n                <CardActions disableSpacing />\r\n              </>}\r\n              <Typography variant=\"body1\" color=\"initial\" component=\"p\">\r\n                {item.date && <TodayIcon style={{color: \"#8842d5\"}} />} {item.date && item.date.split(\"by\")[0]}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </a>\r\n      ))}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default CardItem;","import React from 'react';\r\nimport CardItem from \"./CardItem\";\r\nimport \"./Card.css\";\r\n\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst Card = ({ name, data }) => {\r\n  const bgColour = []\r\n  if(name === \"Indeed\") bgColour.push(\"#0000ff\", \"blue\")\r\n  if(name === \"CV Library\") bgColour.push(\"#00cd00\", \"green\")\r\n  if(name === \"Reed\") bgColour.push(\"#cd00cd\", \"purple\")\r\n\r\n  return ( \r\n    <Grow \r\n      in\r\n      style={{ transformOrigin: '0 0 0' }}\r\n      {...({ timeout: 1000 })} \r\n      >\r\n      <div className=\"card\" >\r\n        <h1 className=\"title-style\" style={{color: bgColour[0]}} >{name}</h1>\r\n        {data[0].noData \r\n          ? <h1 style={{color: \"#8842d5\"}} >{data[0].noData}</h1>\r\n          : <CardItem data={data} colour={bgColour[1]} />\r\n        }\r\n      </div>\r\n    </Grow>\r\n   );\r\n}\r\n\r\n  \r\n\r\nexport default Card;","import React from 'react';\r\nimport \"./Switch.css\";\r\n\r\nconst Switch = () => {\r\n  return (\r\n    <div className=\"switch\">\r\n      <input type=\"radio\" className=\"switch-input\" name=\"sort\" value=\"relevance\" id=\"relevance\" defaultChecked />\r\n      <label htmlFor=\"relevance\" className=\"switch-label switch-label-off\">Relevance</label>\r\n      <input type=\"radio\" className=\"switch-input\" name=\"sort\" value=\"date\" id=\"date\" />\r\n      <label htmlFor=\"date\" className=\"switch-label switch-label-on\">Date</label>\r\n      <span className=\"switch-selection\"></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Switch;","import React, { useState } from 'react';\nimport './App.css';\nimport Card from \"./Card/Card\";\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Switch from \"./Switch/Switch\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n    '& label.Mui-focused': {\n      color: '#8842d5',\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#8842d5\"\n    }\n  },\n  line: {\n    marginTop: 35,\n    width: '70%',\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n}));\n\nconst ColorLinearProgress = withStyles({\n  colorPrimary: {\n    backgroundColor: '#8842d5',\n  },\n  barColorPrimary: {\n    backgroundColor: '#fff',\n  },\n})(LinearProgress);\n\nconst App = () => {\n\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [text, setText] = useState(false);\n  const [input, setInput] = useState(\n    {\n      job: \"\",\n      city: \"\",\n    }\n  );\n\n  const onChangeHandler = (e) => {\n    e.preventDefault()\n    let name = e.target.name\n    let val = e.target.value\n    setInput(prevState => (\n      {\n        ...prevState,\n        [name]: val\n      }\n    ))\n  }\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault()\n    e.target.reset()\n    document.getElementById(\"whatBox\").blur()\n    document.getElementById(\"whereBox\").blur()\n    setText({job: input.job, city: input.city})\n    setLoading(true)\n    const sort = document.querySelector('input[name=\"sort\"]:checked').value\n    const settings = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({job: input.job, city: input.city, sort: sort})\n    };\n    try {\n      const response = await fetch(\"/search\", settings)\n      if (!response.ok) throw await response.json();\n      const data = await response.json()\n      data && setLoading(false)\n      setData(data)\n      document.getElementById('cardId').scrollIntoView({\n        behavior: 'smooth'\n      });\n    } catch (error) {\n      console.log(error)\n    } \n  }\n\n  const cardSites = data && Object.keys(data[0].items)\n  const displayCard = cardSites && cardSites.map((item, index) => (\n    <Card key={index}  name={item} data={data[0].items[item]} />\n    ))\n\n  const classes = useStyles();\n\n  const btnStyle = {background: \"#8842d5\", color: \"white\", marginTop: \"20px\"}\n  const textColour = {color: \"#8842d5\"}\n  const searchText = (\n    <h3 style={{marginTop: \"25px\"}} >Showing results for \"\n      <span style={textColour} >{text.job}</span>\" jobs in \"<span style={textColour} >{text.city}</span>\"\n    </h3>)\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\" onClick={() => window.location.reload()} >Jobs-4-U</h1>\n      <form className={classes.root} onSubmit={onSubmitHandler} noValidate autoComplete=\"off\">\n        <TextField id=\"whatBox\" name=\"job\" label=\"What\" variant=\"outlined\" onChange={onChangeHandler} />\n        <TextField id=\"whereBox\" name=\"city\" label=\"Where\" variant=\"outlined\" onChange={onChangeHandler} />\n        <Button className=\"btn-style\" variant=\"contained\" type=\"submit\" style={btnStyle} >Search</Button>\n      </form>\n      <Switch />      \n      {loading && <ColorLinearProgress className={classes.line} />}\n      {text && searchText}\n      <div id=\"cardId\" >\n        {displayCard}\n      </div>\n    </div>\n  );\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}